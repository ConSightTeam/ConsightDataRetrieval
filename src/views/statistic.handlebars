<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-7">
                    <h1 class="m-0 text-dark">{{ display_property }} Statistic</h1>
                </div><!-- /.col -->
                <div class="col-sm-1">
                 <a type="button" href="./hour" class="btn btn-block btn-primary">Hour</a>
                </div><!-- /.col -->
                <div class="col-sm-1">
                 <a type="button" href="./day" class="btn btn-block btn-primary">Day</a>
                </div><!-- /.col -->
                <div class="col-sm-1">
                 <a type="button" href="./month" class="btn btn-block btn-primary">Month</a>
                </div><!-- /.col -->
                <div class="col-sm-2">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="./">Home</a></li>
                        <li class="breadcrumb-item active">{{ display_property }} Statistic</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->

    <!-- Main content -->
    <div class="row mb-2">
      <div class="col-sm-6">
    <div class="card card-primary">
      <div class="card-header">
        <h3 class="card-title">{{ display_property }} Minimum and Maximum</h3>
      </div>
      <div class="card-body">
        <div class="chart">
          <div class="chartjs-size-monitor">
            <div class="chartjs-size-monitor-expand">
              <div class="x">

              </div>
              </div>
              <div class="chartjs-size-monitor-shrink">
                <div class="x">
                </div>
              </div>
            </div>
          <canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 616px;" width="616" height="250" class="chartjs-render-monitor">

          </canvas>
        </div>
      </div>
      <!-- /.card-body -->
    </div>
    </div>
    <div class="col-sm-6">
    <div class="card card-primary">
      <div class="card-header">
        <h3 class="card-title">{{ display_property }} Average</h3>
      </div>
      <div class="card-body">
        <div class="chart"><div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
          <canvas id="lineChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 607px;" width="607" height="250" class="chartjs-render-monitor"></canvas>        </div>
      </div>
      <!-- /.card-body -->
    </div>
    </div>
    </div>


    <div>
        {{#unless statistics}}
            <p>No Data</p>
        {{/unless}}
        <div class="row">
          <div class="col-12">
            <div class="card card-primary">
              <div class="card-header">
                <h3 class="card-title">Details</h3>
              </div>
              <!-- /.card-header -->
              <div class="card-body table-responsive p-0">
                <table class="table table-hover text-nowrap">
                  <thead>
                    <tr>
                      <th>#</th>
                      <th>Timestamp</th>
                      <th>Minimum</th>
                      <th>Maximum</th>
                      <th>Average</th>
                    </tr>
                  </thead>
                  <tbody>
                    {{#each statistics }}
                    <tr>
                      <td>{{ @index }}</td>
                      <td>{{ this.inserted_on_date}}</td>
                      <td>{{ this.minimum }}</td>
                      <td>{{ this.maximum }}</td>
                      <td>{{ this.average }}</td>
                    </tr>
                    {{/each}}
                  </tbody>
                </table>
              </div>
              <!-- /.card-body -->
            </div>
            <!-- /.card -->
          </div>
        </div>
        
    </div>
    <!-- /.content -->
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<script>
  line_chart_average_data = []
  bar_chart_max_data = []
  bar_chart_min_data = []
  label_chart_data = []

function addData(chart, label, data) {
    chart.data.labels.push(label);
    chart.data.datasets.forEach((dataset) => {
        dataset.data.push(data);
    });
    chart.update();
}

function removeData(chart) {
    chart.data.labels.pop();
    chart.data.datasets.forEach((dataset) => {
        dataset.data.pop();
    });
    chart.update();
}

function formatTimestamp(txt){
  res = txt.split(" ");
  new_text = res[1] + " " + res[2] + " " + res[3]
  return  new_text 
}

function formatAverageValue(num){
  return num.toFixed(2);
}

  {{#each statistics}}
    label_chart_data.push(formatTimestamp("{{this.inserted_on_date}}"));
    line_chart_average_data.push(formatAverageValue({{this.average}}));
    bar_chart_min_data.push({{this.minimum}});
    bar_chart_max_data.push({{this.maximum}});
  {{/each}}

  console.log(line_chart_average_data);
  console.log(bar_chart_min_data);
  console.log(bar_chart_max_data);
  console.log(label_chart_data);

  visualised_line_chart_average_data = {
      labels: label_chart_data,
      datasets:[{
            label               : 'line chart',
            backgroundColor     : 'rgba(60,141,188,0.9)',
            borderColor         : 'rgba(60,141,188,0.8)',
            pointRadius          : false,
            pointColor          : '#3b8bba',
            pointStrokeColor    : 'rgba(60,141,188,1)',
            pointHighlightFill  : '#fff',
            pointHighlightStroke: 'rgba(60,141,188,1)',
            data                : line_chart_average_data
      }]
  }

    visualised_bar_chart_data = {
      labels: label_chart_data,
      datasets:[{
            label               : 'barchart max chart',
            backgroundColor     : 'rgba(60,141,188,0.9)',
            borderColor         : 'rgba(60,141,188,0.8)',
            pointRadius          : false,
            pointColor          : '#3b8bba',
            pointStrokeColor    : 'rgba(60,141,188,1)',
            pointHighlightFill  : '#fff',
            pointHighlightStroke: 'rgba(60,141,188,1)',
            data                : bar_chart_max_data
      },
      {
            label               : 'barchart min chart',
            backgroundColor     : 'rgba(210, 214, 222, 1)',
            borderColor         : 'rgba(210, 214, 222, 1)',
            pointRadius          : false,
            pointColor          : '#c1c7d1',
            pointStrokeColor    : 'rgba(210, 214, 222, 1)',
            pointHighlightFill  : '#fff',
            pointHighlightStroke: 'rgba(220,220,220,1)',
            data                : bar_chart_min_data
      }
      ]
  }

  //Barchart
  var barChartData = {
    labels  : label_chart_data,
    datasets: [
      {
        label               : 'Minimum',
        backgroundColor     : '#ced4da',
        borderColor         : '#ced4da',
        pointRadius          : false,
        pointColor          : '#3b8bba',
        pointStrokeColor    : 'rgba(60,141,188,1)',
        pointHighlightFill  : '#fff',
        pointHighlightStroke: 'rgba(60,141,188,1)',
        data                : bar_chart_min_data
      },
      {
        label               : 'Maximum',
        backgroundColor     : '#007bff',
        borderColor         : '#007bff',
        pointRadius         : false,
        pointColor          : '#007bff',
        pointStrokeColor    : '#c1c7d1',
        pointHighlightFill  : '#fff',
        pointHighlightStroke: 'rgba(220,220,220,1)',
        data                : bar_chart_max_data
      },
    ]
  }

  var barChartOptions = {
    responsive              : true,
    maintainAspectRatio     : false,
    datasetFill             : false
  }

  // Line chart
  var lineChartData = {
  labels  : label_chart_data,
  datasets: [
    {
      label               : 'Average',
      fill                : false,
      backgroundColor     : '#007bff',
      borderColor         : '#007bff',
      pointRadius         : false,
      pointColor          : '#007bff',
      pointStrokeColor    : 'rgba(60,141,188,1)',
      pointHighlightFill  : '#fff',
      pointHighlightStroke: 'rgba(60,141,188,1)',
      data                : line_chart_average_data
    },
  ]
}

var lineChartOptions = {
    maintainAspectRatio : false,
    responsive : true,
    legend: {
      display: false
    },
    tooltips: {
      mode: 'index',
      intersect: false,
    },
    hover: {
      mode: 'nearest',
      intersect: true
    },
    scales: {
      xAxes: [{
        gridLines : {
          display : false,
        }
      }],
      yAxes: [{
        gridLines : {
          display : false,
        }
      }]
    }
  }

  // Initialize Bar chart
  var bar_ctx = document.getElementById('barChart').getContext('2d');
  var barChart = new Chart(bar_ctx, {
    type: 'bar', 
    data: barChartData,
    options: barChartOptions
  });

  // Initialize Line chart
  var line_ctx = document.getElementById('lineChart').getContext('2d');
  var lineChart = new Chart(line_ctx, { 
    type: 'line',
    data: lineChartData, 
    options: lineChartOptions
  });

  //addData(barChart, label_chart_data, visualised_bar_chart_data);
  //addData(lineChart, label_chart_data, visualised_line_chart_average_data);
  console.log("END OF GRAPH SCRIPT");
</script>